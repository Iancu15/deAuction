{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimumBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximumNumberOfBidders",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "auctioneerCollateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "interval",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Auction__AlreadyEnteredAuction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__AuctionIsClosed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__AuctionIsStillOpen",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minimumBid",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Auction__BidBelowMinimumBid",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Auction__DidntCoverCollateral",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__DidntEnterAuction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__HighestBidderCantWithdraw",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "interval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxInterval",
          "type": "uint256"
        }
      ],
      "name": "Auction__IntervalAboveMaximum",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "interval",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "Auction__IntervalBelowThreshold",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "maximumNumberOfBidders",
          "type": "uint256"
        }
      ],
      "name": "Auction__MaximumNumbersOfBiddersReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__OnlySellerCanCallFunction",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__RedundantZeroBidIncrease",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__RoutingReservedForHighestBidder",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__SellerCantCallFunction",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "timeUntilThreshold",
          "type": "uint256"
        }
      ],
      "name": "Auction__ThresholdNotReached",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__TransactionFailed",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Auction__UpkeepNotNeeded",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountSent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "Auction__ZeroStartingBid",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "burnAllStoredValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canICloseAuction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upkeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "closeAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "doIHaveTheHighestBid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enterAuction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuctionWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAuctioneerCollateralAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCloseTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getClosedInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentHighestBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getInterval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMaximumNumberOfBidders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinimumBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyCurrentBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumberOfBidders",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOpenThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSellerAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSellerCollateralAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStartTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimePassedSinceAuctionClosed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimePassedSinceStart",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUntilClosing",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUntilDestroy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTimeUntilThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "increaseBid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "leaveAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "routeHighestBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_isOpen",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x0dfe832178be53e99dc8802c2e356394b8466ff7faf1983e1522dc1966165c58",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2050193",
    "logsBloom": "0x
    "blockHash": "0xf055978ec635930116c0cbf1a126b430ed4fe2625e8c04d98f66d3e2339a5316",
    "transactionHash": "0x0dfe832178be53e99dc8802c2e356394b8466ff7faf1983e1522dc1966165c58",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2050193",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "10000000000000000",
    5,
    "100000000000000000",
    604800
  ],
  "numDeployments": 1,
  "solcInputHash": "ce06cae837939a75e6eeb226a302ac18",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimumBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximumNumberOfBidders\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"auctioneerCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Auction__AlreadyEnteredAuction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__AuctionIsClosed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__AuctionIsStillOpen\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumBid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Auction__BidBelowMinimumBid\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Auction__DidntCoverCollateral\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__DidntEnterAuction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__HighestBidderCantWithdraw\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxInterval\",\"type\":\"uint256\"}],\"name\":\"Auction__IntervalAboveMaximum\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"Auction__IntervalBelowThreshold\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maximumNumberOfBidders\",\"type\":\"uint256\"}],\"name\":\"Auction__MaximumNumbersOfBiddersReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__OnlySellerCanCallFunction\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__RedundantZeroBidIncrease\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__RoutingReservedForHighestBidder\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__SellerCantCallFunction\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"timeUntilThreshold\",\"type\":\"uint256\"}],\"name\":\"Auction__ThresholdNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__TransactionFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Auction__UpkeepNotNeeded\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountSent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"Auction__ZeroStartingBid\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"burnAllStoredValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canICloseAuction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"checkUpkeep\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"upkeepNeeded\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"closeAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"doIHaveTheHighestBid\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enterAuction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuctionWinner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAuctioneerCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCloseTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClosedInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentHighestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMaximumNumberOfBidders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinimumBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyCurrentBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfBidders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOpenThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSellerAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSellerCollateralAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStartTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimePassedSinceAuctionClosed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimePassedSinceStart\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUntilClosing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUntilDestroy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTimeUntilThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"increaseBid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"leaveAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"performUpkeep\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"routeHighestBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_isOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/AutomationBase.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ncontract AutomationBase {\\n  error OnlySimulatedBackend();\\n\\n  /**\\n   * @notice method that allows it to be simulated via eth_call by checking that\\n   * the sender is the zero address.\\n   */\\n  function preventExecution() internal view {\\n    if (tx.origin != address(0)) {\\n      revert OnlySimulatedBackend();\\n    }\\n  }\\n\\n  /**\\n   * @notice modifier that allows it to be simulated via eth_call by checking\\n   * that the sender is the zero address.\\n   */\\n  modifier cannotExecute() {\\n    preventExecution();\\n    _;\\n  }\\n}\\n\",\"keccak256\":\"0x5d354afa1a97dffe66094397cdcbb0c14713cf3d609d88fd8f9891010e9a351a\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/AutomationCompatible.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"./AutomationBase.sol\\\";\\nimport \\\"./interfaces/AutomationCompatibleInterface.sol\\\";\\n\\nabstract contract AutomationCompatible is AutomationBase, AutomationCompatibleInterface {}\\n\",\"keccak256\":\"0x40e5ae0eff4edd0740c1b5590d09c344f84dee031e82d5294563e99603774f80\",\"license\":\"MIT\"},\"@chainlink/contracts/src/v0.8/interfaces/AutomationCompatibleInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AutomationCompatibleInterface {\\n  /**\\n   * @notice method that is simulated by the keepers to see if any work actually\\n   * needs to be performed. This method does does not actually need to be\\n   * executable, and since it is only ever simulated it can consume lots of gas.\\n   * @dev To ensure that it is never called, you may want to add the\\n   * cannotExecute modifier from KeeperBase to your implementation of this\\n   * method.\\n   * @param checkData specified in the upkeep registration so it is always the\\n   * same for a registered upkeep. This can easily be broken down into specific\\n   * arguments using `abi.decode`, so multiple upkeeps can be registered on the\\n   * same contract and easily differentiated by the contract.\\n   * @return upkeepNeeded boolean to indicate whether the keeper should call\\n   * performUpkeep or not.\\n   * @return performData bytes that the keeper should call performUpkeep with, if\\n   * upkeep is needed. If you would like to encode data to decode later, try\\n   * `abi.encode`.\\n   */\\n  function checkUpkeep(bytes calldata checkData) external returns (bool upkeepNeeded, bytes memory performData);\\n\\n  /**\\n   * @notice method that is actually executed by the keepers, via the registry.\\n   * The data returned by the checkUpkeep simulation will be passed into\\n   * this method to actually be executed.\\n   * @dev The input to this method should not be trusted, and the caller of the\\n   * method should not even be restricted to any single registry. Anyone should\\n   * be able call it, and the input should be validated, there is no guarantee\\n   * that the data passed in is the performData returned from checkUpkeep. This\\n   * could happen due to malicious keepers, racing keepers, or simply a state\\n   * change while the performUpkeep transaction is waiting for confirmation.\\n   * Always validate the data passed in.\\n   * @param performData is the data which was passed back from the checkData\\n   * simulation. If it is encoded, it can easily be decoded into other types by\\n   * calling `abi.decode`. This data should not be trusted, and should be\\n   * validated against the contract's current state.\\n   */\\n  function performUpkeep(bytes calldata performData) external;\\n}\\n\",\"keccak256\":\"0x67076747c6f66d8d43472a56e72879c350056bff82e069addaf9064922863340\",\"license\":\"MIT\"},\"contracts/Auction.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\n\\npragma solidity ^0.8.7;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/AutomationCompatible.sol\\\";\\n\\nerror Auction__BidBelowMinimumBid(uint256 amountSent, uint256 minimumBid, uint256 collateralAmount);\\nerror Auction__ZeroStartingBid(uint256 amountSent, uint256 collateralAmount);\\nerror Auction__RedundantZeroBidIncrease();\\nerror Auction__DidntCoverCollateral(uint256 amountSent, uint256 collateralAmount);\\nerror Auction__HighestBidderCantWithdraw();\\nerror Auction__TransactionFailed();\\nerror Auction__MaximumNumbersOfBiddersReached(uint256 maximumNumberOfBidders);\\nerror Auction__SellerCantCallFunction();\\nerror Auction__DidntEnterAuction();\\nerror Auction__AuctionIsStillOpen();\\nerror Auction__RoutingReservedForHighestBidder();\\nerror Auction__OnlySellerCanCallFunction();\\nerror Auction__IntervalBelowThreshold(uint256 interval, uint256 threshold);\\nerror Auction__AuctionIsClosed();\\nerror Auction__ThresholdNotReached(uint256 timeUntilThreshold);\\nerror Auction__UpkeepNotNeeded();\\nerror Auction__IntervalAboveMaximum(uint256 interval, uint256 maxInterval);\\nerror Auction__AlreadyEnteredAuction();\\n\\ncontract Auction is AutomationCompatibleInterface {\\n    mapping(address => uint256) private s_auctioneerToCurrentBid;\\n    address[] private s_auctioneers;\\n    address private s_currentHighestBidder;\\n    uint256 private s_currentHighestBid;\\n    uint256 private s_currentNumberOfBidders;\\n    uint256 private  s_closeTimestamp;\\n    bool public s_isOpen;\\n    address private immutable i_seller;\\n    uint256 private immutable i_minimumBid;\\n    uint256 private immutable i_maximumNumberOfBidders;\\n    uint256 private immutable i_auctioneerCollateralAmount;\\n    uint256 private immutable i_sellerCollateralAmount;\\n    uint256 private immutable i_interval;\\n    uint256 private immutable i_startTimestamp;\\n    uint256 private constant OPEN_INTERVAL_THRESHOLD = 24 * 3600;\\n    uint256 private constant CLOSED_INTERVAL = 7 * 24 * 3600;\\n    uint256 private constant MAXIMUM_INTERVAL = 7 * 24 * 3600;\\n\\n    constructor(\\n        uint256 minimumBid,\\n        uint256 maximumNumberOfBidders,\\n        uint256 auctioneerCollateralAmount,\\n        uint256 interval\\n    ) payable {\\n        if (interval < OPEN_INTERVAL_THRESHOLD) {\\n            revert Auction__IntervalBelowThreshold(interval, OPEN_INTERVAL_THRESHOLD);\\n        }\\n\\n        if (interval > MAXIMUM_INTERVAL) {\\n            revert Auction__IntervalAboveMaximum(interval, MAXIMUM_INTERVAL);\\n        }\\n\\n        i_minimumBid = minimumBid;\\n        i_seller = msg.sender;\\n        i_maximumNumberOfBidders = maximumNumberOfBidders;\\n        i_auctioneerCollateralAmount = auctioneerCollateralAmount;\\n        i_sellerCollateralAmount = msg.value;\\n        i_interval = interval;\\n        i_startTimestamp = block.timestamp;\\n        s_isOpen = true;\\n        s_currentNumberOfBidders = 0;\\n    }\\n\\n    modifier auctionClosed() {\\n        if (s_isOpen) {\\n            revert Auction__AuctionIsStillOpen();\\n        }\\n        _;\\n    }\\n\\n    modifier auctionOpen() {\\n        if (!s_isOpen) {\\n            revert Auction__AuctionIsClosed();\\n        }\\n        _;\\n    }\\n\\n    modifier onlySeller() {\\n        if (msg.sender != i_seller) {\\n            revert Auction__OnlySellerCanCallFunction();\\n        }\\n        _;\\n    }\\n\\n    modifier notSeller() {\\n        if (msg.sender == i_seller) {\\n            revert Auction__SellerCantCallFunction();\\n        }\\n        _;\\n    }\\n\\n    function enterAuction() public payable notSeller auctionOpen {\\n        if (s_auctioneerToCurrentBid[msg.sender] > 0) {\\n            revert Auction__AlreadyEnteredAuction();\\n        }\\n\\n        if (s_currentNumberOfBidders == i_maximumNumberOfBidders) {\\n            revert Auction__MaximumNumbersOfBiddersReached(\\n                i_maximumNumberOfBidders\\n            );\\n        }\\n\\n        if (msg.value < i_auctioneerCollateralAmount) {\\n            revert Auction__DidntCoverCollateral({\\n                amountSent: msg.value,\\n                collateralAmount: i_auctioneerCollateralAmount\\n            });\\n        }\\n\\n        uint256 startingBid = msg.value - i_auctioneerCollateralAmount;\\n        if (startingBid == 0) {\\n            revert Auction__ZeroStartingBid({\\n                amountSent: msg.value,\\n                collateralAmount: i_auctioneerCollateralAmount\\n            });\\n        }\\n\\n        if (startingBid < i_minimumBid) {\\n            revert Auction__BidBelowMinimumBid({\\n                amountSent: msg.value,\\n                minimumBid: i_minimumBid,\\n                collateralAmount: i_auctioneerCollateralAmount\\n            });\\n        }\\n\\n        s_auctioneerToCurrentBid[msg.sender] = startingBid;\\n        if (startingBid > s_currentHighestBid) {\\n            s_currentHighestBid = startingBid;\\n            s_currentHighestBidder = msg.sender;\\n        }\\n\\n        s_currentNumberOfBidders++;\\n        s_auctioneers.push(msg.sender);\\n    }\\n\\n    function increaseBid() public payable {\\n        uint256 currentBid = s_auctioneerToCurrentBid[msg.sender];\\n        if (currentBid == 0) {\\n            revert Auction__DidntEnterAuction();\\n        }\\n\\n        if (msg.value == 0) {\\n            revert Auction__RedundantZeroBidIncrease();\\n        }\\n\\n        currentBid += msg.value;\\n        s_auctioneerToCurrentBid[msg.sender] = currentBid;\\n        if (currentBid > s_currentHighestBid) {\\n            s_currentHighestBid = currentBid;\\n            s_currentHighestBidder = msg.sender;\\n        }\\n    }\\n\\n    function leaveAuction() public {\\n        if (msg.sender == s_currentHighestBidder) {\\n            revert Auction__HighestBidderCantWithdraw();\\n        }\\n\\n        uint256 currentBid = s_auctioneerToCurrentBid[msg.sender];\\n        if (currentBid == 0) {\\n            revert Auction__DidntEnterAuction();\\n        }\\n\\n        s_auctioneerToCurrentBid[msg.sender] = 0;\\n        s_currentNumberOfBidders -= 1;\\n        (bool success, ) = payable(msg.sender).call{\\n            value: currentBid + i_auctioneerCollateralAmount\\n        }(\\\"\\\");\\n\\n        if (!success) {\\n            revert Auction__TransactionFailed();\\n        }\\n    }\\n\\n    function closeAuction() public onlySeller {\\n        if (!canICloseAuction()) {\\n            revert Auction__ThresholdNotReached(getTimeUntilThreshold());\\n        }\\n\\n        if (s_currentHighestBid == 0) {\\n            destroyContract();\\n        }\\n\\n        s_isOpen = false;\\n        s_closeTimestamp = block.timestamp;\\n        address[] memory auctioneers = s_auctioneers;\\n        for (uint256 index = 0; index < auctioneers.length; index++) {\\n            address auctioneer = auctioneers[index];\\n            uint256 bid = s_auctioneerToCurrentBid[auctioneer];\\n            if (bid == 0 || auctioneer == s_currentHighestBidder) {\\n                continue;\\n            }\\n\\n            s_auctioneerToCurrentBid[auctioneer] = 0;\\n            (bool success, ) = payable(auctioneer).call{\\n                value: bid + i_auctioneerCollateralAmount\\n            }(\\\"\\\");\\n\\n            if (!success) {\\n                revert Auction__TransactionFailed();\\n            }\\n        }\\n    }\\n\\n    function routeHighestBid() public auctionClosed {\\n        if (msg.sender != s_currentHighestBidder) {\\n            revert Auction__RoutingReservedForHighestBidder();\\n        }\\n\\n        (bool success, ) = payable(i_seller).call{\\n            value: s_currentHighestBid + i_sellerCollateralAmount\\n        }(\\\"\\\");\\n\\n        if (!success) {\\n            revert Auction__TransactionFailed();\\n        }\\n\\n        (success, ) = payable(s_currentHighestBidder).call{\\n            value: i_auctioneerCollateralAmount\\n        }(\\\"\\\");\\n\\n        if (!success) {\\n            revert Auction__TransactionFailed();\\n        }\\n\\n        destroyContract();\\n    }\\n\\n    function burnAllStoredValue() public auctionClosed onlySeller {\\n        destroyContract();\\n    }\\n\\n    function checkUpkeep(bytes memory)\\n        public\\n        view\\n        override\\n        returns (bool upkeepNeeded, bytes memory)\\n    {\\n        if (s_isOpen) {\\n            upkeepNeeded = getTimePassedSinceStart() >= i_interval;\\n        } else {\\n            upkeepNeeded = getTimePassedSinceAuctionClosed() >= CLOSED_INTERVAL;\\n        }\\n\\n        return (upkeepNeeded, \\\"0x0\\\");\\n    }\\n\\n    function performUpkeep(bytes calldata) external override {\\n        (bool upkeepNeeded, ) = checkUpkeep(\\\"\\\");\\n        if (!upkeepNeeded) {\\n            revert Auction__UpkeepNotNeeded();\\n        }\\n\\n        if (s_isOpen) {\\n            closeAuction();\\n        } else {\\n            destroyContract();\\n        }\\n    }\\n\\n    function destroyContract() internal {\\n        selfdestruct(payable(address(this)));\\n    }\\n\\n    function getAuctionWinner()\\n        public\\n        view\\n        auctionClosed\\n        onlySeller\\n        returns (address)\\n    {\\n        return s_currentHighestBidder;\\n    }\\n\\n    function getMyCurrentBid() public view notSeller returns (uint256) {\\n        return s_auctioneerToCurrentBid[msg.sender];\\n    }\\n\\n    function getContractBalance() public view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    function getCurrentHighestBid() public view returns (uint256) {\\n        return s_currentHighestBid;\\n    }\\n\\n    function doIHaveTheHighestBid() public view notSeller returns (bool) {\\n        return msg.sender == s_currentHighestBidder;\\n    }\\n\\n    function getMinimumBid() public view returns (uint256) {\\n        return i_minimumBid;\\n    }\\n\\n    function getSellerAddress() public view returns (address) {\\n        return i_seller;\\n    }\\n\\n    function isOpen() public view returns (bool) {\\n        return s_isOpen;\\n    }\\n\\n    function getNumberOfBidders() public view returns (uint256) {\\n        return s_currentNumberOfBidders;\\n    }\\n\\n    function getMaximumNumberOfBidders() public view returns (uint256) {\\n        return i_maximumNumberOfBidders;\\n    }\\n\\n    function getAuctioneerCollateralAmount() public view returns (uint256) {\\n        return i_auctioneerCollateralAmount;\\n    }\\n\\n    function getSellerCollateralAmount() public view returns (uint256) {\\n        return i_sellerCollateralAmount;\\n    }\\n\\n    function getInterval() public view returns (uint256) {\\n        return i_interval;\\n    }\\n\\n    function getStartTimestamp() public view returns (uint256) {\\n        return i_startTimestamp;\\n    }\\n\\n    function getOpenThreshold() public pure returns (uint256) {\\n        return OPEN_INTERVAL_THRESHOLD;\\n    }\\n\\n    function getTimePassedSinceStart() public view returns (uint256) {\\n        return block.timestamp - i_startTimestamp;\\n    }\\n\\n    function getTimeUntilClosing() public view auctionOpen returns (uint256) {\\n        return i_interval - getTimePassedSinceStart();\\n    }\\n\\n    function getTimeUntilThreshold() public view returns (uint256) {\\n        return (getTimePassedSinceStart() >= OPEN_INTERVAL_THRESHOLD) ? 0 : (OPEN_INTERVAL_THRESHOLD - getTimePassedSinceStart());\\n    }\\n\\n    function getCloseTimestamp() public view auctionClosed returns (uint256) {\\n        return s_closeTimestamp;\\n    }\\n\\n    function getTimePassedSinceAuctionClosed() public view auctionClosed returns (uint256) {\\n        return block.timestamp - s_closeTimestamp;\\n    }\\n\\n    function getClosedInterval() public pure returns (uint256) {\\n        return CLOSED_INTERVAL;\\n    }\\n\\n    function getTimeUntilDestroy() public view auctionClosed returns (uint256) {\\n        return CLOSED_INTERVAL - getTimePassedSinceAuctionClosed();\\n    }\\n\\n    function canICloseAuction() public view onlySeller returns (bool) {\\n        return getTimeUntilThreshold() == 0;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x2c13109c5b1e809dba585729cea811ff8b16bc081b8b26774ae23665ae7a8acd\",\"license\":\"AGPL-3.0\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106101e35760003560e01c80638576912111610102578063bbdd1a1d11610095578063e86e12c111610064578063e86e12c11461062f578063e91190e814610646578063e94c05f514610671578063ffd3fcde1461069c576101e3565b8063bbdd1a1d14610583578063c5b63600146105ae578063cae227a8146105d9578063e2fbf84114610604576101e3565b8063923a54c8116100d1578063923a54c8146104d7578063ab868b0314610502578063b081eb721461052d578063bb8845d114610558576101e3565b8063857691211461043f578063867610a11461046a5780638aa0e9511461048157806391ad27b4146104ac576101e3565b806347535d7b1161017a5780636f9fb98a116101495780636f9fb98a146103d55780637204d5e31461040057806374f7cd4e1461040a57806384b09e8614610414576101e3565b806347535d7b146103165780634c583d8a1461034157806352fb5a7a1461036c5780636e04ff0d14610397576101e3565b8063271649ab116101b6578063271649ab146102945780632880cfd7146102ab578063378252f2146102d65780634585e33b146102ed576101e3565b80631038dfd2146101e857806314203aad146102135780631f89f25e1461023e57806320d6c04014610269575b600080fd5b3480156101f457600080fd5b506101fd6106c7565b60405161020a9190612061565b60405180910390f35b34801561021f57600080fd5b506102286106fa565b6040516102359190612061565b60405180910390f35b34801561024a57600080fd5b50610253610756565b6040516102609190612061565b60405180910390f35b34801561027557600080fd5b5061027e61077e565b60405161028b9190612061565b60405180910390f35b3480156102a057600080fd5b506102a9610788565b005b3480156102b757600080fd5b506102c0610a36565b6040516102cd9190612061565b60405180910390f35b3480156102e257600080fd5b506102eb610a6d565b005b3480156102f957600080fd5b50610314600480360381019061030f9190611ec7565b610e06565b005b34801561032257600080fd5b5061032b610e8a565b6040516103389190612016565b60405180910390f35b34801561034d57600080fd5b50610356610ea1565b6040516103639190611ffb565b60405180910390f35b34801561037857600080fd5b50610381610f97565b60405161038e9190612061565b60405180910390f35b3480156103a357600080fd5b506103be60048036038101906103b99190611f14565b610fbf565b6040516103cc929190612031565b60405180910390f35b3480156103e157600080fd5b506103ea61105b565b6040516103f79190612061565b60405180910390f35b610408611063565b005b6104126111c3565b005b34801561042057600080fd5b5061042961166b565b6040516104369190611ffb565b60405180910390f35b34801561044b57600080fd5b50610454611693565b6040516104619190612061565b60405180910390f35b34801561047657600080fd5b5061047f6116bb565b005b34801561048d57600080fd5b50610496611791565b6040516104a39190612061565b60405180910390f35b3480156104b857600080fd5b506104c16117e2565b6040516104ce9190612061565b60405180910390f35b3480156104e357600080fd5b506104ec61180a565b6040516104f99190612061565b60405180910390f35b34801561050e57600080fd5b5061051761188a565b6040516105249190612061565b60405180910390f35b34801561053957600080fd5b506105426118ee565b60405161054f9190612016565b60405180910390f35b34801561056457600080fd5b5061056d611985565b60405161057a9190612061565b60405180910390f35b34801561058f57600080fd5b506105986119ad565b6040516105a59190612061565b60405180910390f35b3480156105ba57600080fd5b506105c36119b8565b6040516105d09190612061565b60405180910390f35b3480156105e557600080fd5b506105ee6119e0565b6040516105fb9190612016565b60405180910390f35b34801561061057600080fd5b506106196119f3565b6040516106269190612061565b60405180910390f35b34801561063b57600080fd5b506106446119fe565b005b34801561065257600080fd5b5061065b611c34565b6040516106689190612061565b60405180910390f35b34801561067d57600080fd5b50610686611d00565b6040516106939190612061565b60405180910390f35b3480156106a857600080fd5b506106b1611d0a565b6040516106be9190612016565b60405180910390f35b60007f0000000000000000000000000000000000000000000000000000000000000000426106f591906121af565b905090565b6000600660009054906101000a900460ff1615610743576040517ffa51231700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6005544261075191906121af565b905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600354905090565b600660009054906101000a900460ff16156107cf576040517ffa51231700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610856576040517fb1afd9c400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000006003546108bd9190612159565b6040516108c990611fe6565b60006040518083038185875af1925050503d8060008114610906576040519150601f19603f3d011682016040523d82523d6000602084013e61090b565b606091505b5050905080610946576040517fc045263a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f00000000000000000000000000000000000000000000000000000000000000006040516109ac90611fe6565b60006040518083038185875af1925050503d80600081146109e9576040519150601f19603f3d011682016040523d82523d6000602084013e6109ee565b606091505b50508091505080610a2b576040517fc045263a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a33611de8565b50565b600062015180610a446106c7565b1015610a6557610a526106c7565b62015180610a6091906121af565b610a68565b60005b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af2576040517f96fedc8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610afa6118ee565b610b4257610b06610a36565b6040517fc857ff67000000000000000000000000000000000000000000000000000000008152600401610b399190612061565b60405180910390fd5b60006003541415610b5657610b55611de8565b5b6000600660006101000a81548160ff0219169083151502179055504260058190555060006001805480602002602001604051908101604052809291908181526020018280548015610bfc57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610bb2575b5050505050905060005b8151811015610e02576000828281518110610c2457610c23612316565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811480610ccd5750600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15610cd9575050610def565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060008273ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000083610d629190612159565b604051610d6e90611fe6565b60006040518083038185875af1925050503d8060008114610dab576040519150601f19603f3d011682016040523d82523d6000602084013e610db0565b606091505b5050905080610deb576040517fc045263a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505b8080610dfa9061229e565b915050610c06565b5050565b6000610e2060405180602001604052806000815250610fbf565b50905080610e5a576040517fda439dd200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660009054906101000a900460ff1615610e7c57610e77610a6d565b610e85565b610e84611de8565b5b505050565b6000600660009054906101000a900460ff16905090565b6000600660009054906101000a900460ff1615610eea576040517ffa51231700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f6f576040517f96fedc8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006060600660009054906101000a900460ff161561100a577f00000000000000000000000000000000000000000000000000000000000000006110016106c7565b1015915061101b565b62093a806110166106fa565b101591505b816040518060400160405280600381526020017f307830000000000000000000000000000000000000000000000000000000000081525091509150915091565b600047905090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114156110e1576040517f7afac2fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600034141561111c576040517fcf2bd29b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b34816111289190612159565b9050806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003548111156111c0578060038190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611249576040517fb132e98e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600660009054906101000a900460ff1661128f576040517f26c3c0d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115611308576040517f8a4a871f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f0000000000000000000000000000000000000000000000000000000000000000600454141561138f577f00000000000000000000000000000000000000000000000000000000000000006040517fc19c4d410000000000000000000000000000000000000000000000000000000081526004016113869190612061565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000034101561141657347f00000000000000000000000000000000000000000000000000000000000000006040517f05e01adf00000000000000000000000000000000000000000000000000000000815260040161140d92919061207c565b60405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000003461144491906121af565b905060008114156114ae57347f00000000000000000000000000000000000000000000000000000000000000006040517ffc179f000000000000000000000000000000000000000000000000000000000081526004016114a592919061207c565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000081101561155757347f00000000000000000000000000000000000000000000000000000000000000007f00000000000000000000000000000000000000000000000000000000000000006040517fad5f597d00000000000000000000000000000000000000000000000000000000815260040161154e939291906120a5565b60405180910390fd5b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506003548111156115ed578060038190555033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b600460008154809291906116009061229e565b91905055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600660009054906101000a900460ff1615611702576040517ffa51231700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611787576040517f96fedc8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61178f611de8565b565b6000600660009054906101000a900460ff16156117da576040517ffa51231700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600554905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600660009054906101000a900460ff16611852576040517f26c3c0d600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61185a6106c7565b7f000000000000000000000000000000000000000000000000000000000000000061188591906121af565b905090565b6000600660009054906101000a900460ff16156118d3576040517ffa51231700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6118db6106fa565b62093a806118e991906121af565b905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611975576040517f96fedc8700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061197f610a36565b14905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600062093a80905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b600660009054906101000a900460ff1681565b600062015180905090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611a86576040517f84de89da00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811415611b04576040517f7afac2fc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600160046000828254611b5b91906121af565b9250508190555060003373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000083611ba79190612159565b604051611bb390611fe6565b60006040518083038185875af1925050503d8060008114611bf0576040519150601f19603f3d011682016040523d82523d6000602084013e611bf5565b606091505b5050905080611c30576040517fc045263a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611cbc576040517fb132e98e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b6000600454905090565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415611d92576040517fb132e98e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b3073ffffffffffffffffffffffffffffffffffffffff16ff5b6000611e14611e0f84612101565b6120dc565b905082815260208101848484011115611e3057611e2f612383565b5b611e3b84828561222b565b509392505050565b60008083601f840112611e5957611e58612379565b5b8235905067ffffffffffffffff811115611e7657611e75612374565b5b602083019150836001820283011115611e9257611e9161237e565b5b9250929050565b600082601f830112611eae57611ead612379565b5b8135611ebe848260208601611e01565b91505092915050565b60008060208385031215611ede57611edd61238d565b5b600083013567ffffffffffffffff811115611efc57611efb612388565b5b611f0885828601611e43565b92509250509250929050565b600060208284031215611f2a57611f2961238d565b5b600082013567ffffffffffffffff811115611f4857611f47612388565b5b611f5484828501611e99565b91505092915050565b611f66816121e3565b82525050565b611f75816121f5565b82525050565b6000611f8682612132565b611f90818561213d565b9350611fa081856020860161223a565b611fa981612392565b840191505092915050565b6000611fc160008361214e565b9150611fcc826123a3565b600082019050919050565b611fe081612221565b82525050565b6000611ff182611fb4565b9150819050919050565b60006020820190506120106000830184611f5d565b92915050565b600060208201905061202b6000830184611f6c565b92915050565b60006040820190506120466000830185611f6c565b81810360208301526120588184611f7b565b90509392505050565b60006020820190506120766000830184611fd7565b92915050565b60006040820190506120916000830185611fd7565b61209e6020830184611fd7565b9392505050565b60006060820190506120ba6000830186611fd7565b6120c76020830185611fd7565b6120d46040830184611fd7565b949350505050565b60006120e66120f7565b90506120f2828261226d565b919050565b6000604051905090565b600067ffffffffffffffff82111561211c5761211b612345565b5b61212582612392565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600061216482612221565b915061216f83612221565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156121a4576121a36122e7565b5b828201905092915050565b60006121ba82612221565b91506121c583612221565b9250828210156121d8576121d76122e7565b5b828203905092915050565b60006121ee82612201565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b8381101561225857808201518184015260208101905061223d565b83811115612267576000848401525b50505050565b61227682612392565b810181811067ffffffffffffffff8211171561229557612294612345565b5b80604052505050565b60006122a982612221565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156122dc576122db6122e7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b5056fea2646970667358221220e7e4d0b65bcf77bad9662ef19a81a564c32dc82dfa12d4f38d335a797e3f2cef64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 128,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctioneerToCurrentBid",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 131,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_auctioneers",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 133,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_currentHighestBidder",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 135,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_currentHighestBid",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 137,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_currentNumberOfBidders",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 139,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_closeTimestamp",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 141,
        "contract": "contracts/Auction.sol:Auction",
        "label": "s_isOpen",
        "offset": 0,
        "slot": "6",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}